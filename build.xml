<?xml version="1.0"?>
<!--
  =======================================================================

   Innowork-Core build file

   Copyright (c) 2008-2013 Innomatic. All rights reserved.

  =======================================================================
-->
<project name="Innowork Core" default="package">

	<property name="name" value="innowork-core" />
	<property name="version" value="3.5.1" />

    <!--
    Helper target that initializes the project and creates the base
    directory structure.
    -->
    <target name="init" depends="initdir">
    </target>
	
	<target name="initdir">
        <!-- Create the source directory -->
        <mkdir dir="source" />

        <!-- Create the different build directories -->
        <mkdir dir="build/logs" />
        <mkdir dir="build/api" />
        <mkdir dir="build/coverage" />
        <mkdir dir="build/packages" />
	</target>

	<!--
    The clean target is used to remove build artifacts of previous builds. Otherwise
    Innomatic will present old, maybe successful result, even if your build
    process fails.
    -->
	<target name="clean">
		<!-- Remove old log files -->
		<delete>
			<fileset dir="${basedir}/build/logs" includes="**.*" />
		</delete>
		<!-- Remove old api documentation -->
        <!--
		<delete>
			<fileset dir="${basedir}/build/api" includes="**.*" />
		</delete>
        -->
		<!-- Remove old coverage report -->
		<delete>
			<fileset dir="${basedir}/build/coverage" includes="**.*" />
		</delete>
		<!-- Remove old packages -->
		<delete>
			<fileset dir="${basedir}/build/packages" includes="**.*" />
		</delete>
	</target>

	<target name="sources">
		<tar destfile="${basedir}/build/${name}-src-${version}.tgz" compression="gzip">
			<tarfileset dir="${basedir}/source" prefix="${name}-src-${version}">
				<exclude name=".cache/**" />
			</tarfileset>
		</tar>
	</target>

	<target name="checkphp">
		<apply executable="php" failonerror="true">
			<arg value="-l" />
			<fileset dir="${basedir}/source">
				<include name="**/*.php" />
			</fileset>
		</apply>
	</target>

	<!--
   Generates the project documentation into the <project>/build/api directory.
   -->
    <target name="php-documentor">
		<exec executable="phpdoc" dir="${basedir}">
			<arg line="-d source -t ${basedir}/build/api" />
		</exec>
		<tar destfile="${basedir}/build/packages/${name}-${version}-api.tgz" compression="gzip">
			<tarfileset dir="${basedir}/build/api" prefix="${name}-api">
			</tarfileset>
		</tar>
	</target>

	<target name="package">
        <tar destfile="${basedir}/build/packages/${name}-${version}.tgz" compression="gzip">
			<tarfileset dir="${basedir}/source" prefix="${name}-${version}">
				<exclude name="build/**" />
				<exclude name=".cache/**" />
				<exclude name="build.xml" />
			</tarfileset>
		</tar>
	</target>

	<target name="dev" depends="package">
        <exec executable="scp">
            <arg value="${basedir}/build/packages/${name}-${version}.tgz" />
            <arg value="innomatic-dev:/tmp/" />
        </exec>

        <exec executable="ssh">
            <arg value="innomatic-dev" />
            <arg value="-C" />
            <arg value="php" />
            <arg value="/vagrant/dev/innomatic/core/scripts/application.php" />
            <arg value="deploy" />
            <arg value="/tmp/${name}-${version}.tgz" />
        </exec>
	</target>

</project>
